---
# tasks file for login-center
# получаем текущее время для использования в именах лог файлов
- name: Get current timestamp
  ansible.builtin.command: "date +%Y-%m-%d_%H.%M"
  register: tstamp
  changed_when: tstamp.rc != 0

- name: Task 1. Check install login-center when .env exist
  # проверка существования .env файла в каталоге login-center
  ansible.builtin.stat:
    path: "{{ login_center_path }}/login-center/.env"
  register: login_center_path_state

- name: Task 2. Install login center
  # если .env файл отсутствует то запускаем процедуру установки логин центра
  ansible.builtin.include_tasks: login_center_install.yml
  when: not login_center_path_state.stat.exists

- name: Task 3. Check version login-center
  # при наличии .env файла счиатем что логин центр существует и работает
  when: login_center_path_state.stat.exists
  block:
    #  выполняем проверку установки логин центра
    - name: Task 3.1. Get remote env file
      ansible.builtin.slurp:
        path: "{{ login_center_path }}/login-center/.env"
      register: env_file_content

    - name: Task 3.2. Decode env file
      ansible.builtin.set_fact:
        env_file: "{{ env_file_content['content'] | b64decode }}"

    - name: Task 3.3. Get current version login-center
      ansible.builtin.set_fact:
        login_center_version: "{{ env_file.split('\n')[0].split('=')[1] }}"

    - name: Task 3.4. Update login-center
      # если версия установленного логин центра не совпадает с версией
      # заданной в файле переменных хоста то запускаем процедуру обновления логин центра
      ansible.builtin.include_tasks: login_center_update.yml
      when: version != login_center_version
